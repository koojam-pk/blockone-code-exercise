{"version":3,"sources":["components/Header/Header.js","store/actions/types.js","components/Account/TransferDialog/TransferDialog.js","store/actions/index.js","helper/formats.js","components/Transactions/Transactions.js","use-isomorphic-layout-effect.js","components/Account/Account.js","components/App.js","store/reducers/accountReducer.js","store/reducers/transactionReducer.js","store/reducers/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","avatar","margin","appBar","backgroundColor","color","header","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","Avatar","alt","src","SET_TRANSACTIONS","SET_ACCOUNTS","SET_TRANSFER","container","display","flexDirection","formControl","minWidth","selectEmpty","marginTop","row","rowWidth50","flex","transferDialog","React","memo","props","dispatch","useDispatch","useState","account","setAccount","formattedAmount","setFormattedAmount","toAccounts","setToAccounts","toAccountId","setToAccountId","amount","setAmount","amountError","setAmountError","disable","setDisable","toCcy","setToCcy","rate","setRate","rateError","setRateError","useTheme","fullScreen","useMediaQuery","breakpoints","down","accountOptions","useEffect","selectedAccount","JSON","stringify","toLocaleString","ccy","toUpperCase","accounts","length","filterToAccounts","filter","item","id","_disable","i","push","MenuItem","key","value","accountName","accountNumber","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","TextField","name","label","type","InputProps","readOnly","style","helperText","inputProps","FormControl","required","textField","fullWidth","InputLabel","Select","onChange","event","target","selectedCcy","find","displayEmpty","autoFocus","FormHelperText","join","defaultValue","error","disabled","DialogActions","Button","onClick","data-testid","transfer","fromId","toId","ccyInForeign","amountInForeign","axios","post","then","a","res","payload","data","transaction","catch","err","console","log","connect","format","num","fix","p","toFixed","split","reduceRight","acc","orig","pos","columns","align","width","tableWrapper","maxHeight","overflow","subtitle","detail","transactions","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","accountId","onTransactionsFetch","transactionRows","map","createdAt","description","action","createData","handleChangePage","useCallback","newPage","handleChangeRowsPerPage","Paper","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","hover","role","tabIndex","textTransform","TablePagination","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","state","get","actions","useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","fabButton","bottom","right","accountNotSelected","marginLeft","onAccountsFetch","setAccountId","setAccounts","setOpen","useMemo","placeholder","Transactions","Fab","size","TransferDialog","app","routes","exact","path","Account","to","Fragment","Header","initialState","accountReducer","actionTypes","transactionReducer","addTransactions","unshift","combineReducers","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","basename","App","getElementById"],"mappings":"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","file":"static/js/main.3a195b3c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  avatar: {\n    margin: 10,    \n  },\n  appBar: {\n    backgroundColor: '#eaf2f5',\n    color: 'black'\n  },\n}));\n\nconst header = () => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Account\n          </Typography>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.avatar} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default header;","export const FETCH_TRANSACTIONS = 'fetch_transactions';\nexport const SET_TRANSACTIONS = 'set_transactions';\nexport const FETCH_ACCOUNTS = 'fetch_accounts';\nexport const SET_ACCOUNTS = 'set_accounts';\nexport const ADD_TRANSFER = 'add_transfer';\nexport const SET_TRANSFER = 'set_transfer';","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTransfer } from '../../../store/actions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },  \r\n  row: {\r\n    display: 'flex'\r\n  },\r\n  rowWidth50: {\r\n    flex: '1 1 49%'\r\n  }\r\n}));\r\n\r\nconst transferDialog = React.memo((props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();  \r\n  const [ account, setAccount ] = useState({});                 // cannot set to null\r\n  const [ formattedAmount, setFormattedAmount ] = useState(''); // cannot set to null\r\n  const [ toAccounts, setToAccounts ] = useState(null);\r\n  const [ toAccountId, setToAccountId ] = useState('');         // cannot set to null\r\n  const [ amount, setAmount ] = useState(null);\r\n  const [ amountError, setAmountError] = useState(null);    \r\n  const [ disable, setDisable] = useState(true);\r\n  const [ toCcy, setToCcy] = useState('');\r\n  const [ rate, setRate] = useState(1);\r\n  const [ rateError, setRateError] = useState(null);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  let accountOptions = [];\r\n   \r\n  useEffect(() => {\r\n    if (props.selectedAccount) {\r\n      setAccount(props.selectedAccount);\r\n      if (JSON.stringify(props.selectedAccount) !== '{}') {\r\n        setFormattedAmount(`${(+props.selectedAccount.amount).toLocaleString()} ${props.selectedAccount.ccy.toUpperCase()}`);\r\n      }\r\n    }\r\n  }, [props.selectedAccount]);\r\n\r\n  useEffect(() => {\r\n    if(props.accounts && props.accounts.length > 0) {      \r\n      const filterToAccounts = props.accounts.filter(item => item.id !== account.id);\r\n      setToAccounts(filterToAccounts);     \r\n    }\r\n  }, [props.accounts, account]);\r\n\r\n  useEffect(() => {\r\n    if (amount > account.amount) {\r\n      setAmountError('Insufficient funds');\r\n    } else if (amount <= 0) {\r\n      setAmountError('Amount transfer must be greater than 0');\r\n    } else {\r\n      setAmountError(null);\r\n    }\r\n  }, [account.amount, amount]);\r\n\r\n  useEffect(() => {\r\n    const _disable = (account.amount <= 0 || toAccountId === '' || rateError !== null || amountError !==null);\r\n    setDisable(_disable);\r\n  }, [account.amount, toAccountId, rate, amount, amountError, rateError]);\r\n\r\n  if (toAccounts && toAccounts.length > 0) {\r\n    for (let i=0; i<toAccounts.length; i++) {\r\n      accountOptions.push(\r\n        <MenuItem key={i} value={toAccounts[i].id}>{toAccounts[i].accountName}<small>&nbsp;({toAccounts[i].accountNumber})</small></MenuItem>\r\n      );\r\n    }\r\n  }\r\n  const handleToAccountChange = event => {\r\n    setToAccountId(event.target.value);\r\n    const selectedCcy = toAccounts.find(account => account.id === event.target.value).ccy;    \r\n    setToCcy(selectedCcy);\r\n  };\r\n\r\n  const handleAmountChange = event => {    \r\n    setAmount(+event.target.value);    \r\n  };\r\n\r\n  const handleRateChange = event => {\r\n    if (+event.target.value > 0) {\r\n      setRate(+event.target.value);    \r\n      setRateError(null);\r\n    } else {\r\n      setRateError('Rate must not be less than 0');\r\n    }\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    dispatch(addTransfer({\r\n      fromId: account.id,\r\n      toId: toAccountId,\r\n      ccy: account.ccy,      \r\n      amount,\r\n      ccyInForeign: toCcy,\r\n      amountInForeign: amount * rate,\r\n      rate\r\n    }));\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={props.open}\r\n        onClose={props.onClose}\r\n        aria-labelledby=\"responsive-dialog-title\">\r\n        <DialogTitle id=\"responsive-dialog-title\">Fund Transfer</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          </DialogContentText>\r\n          <form className={classes.container} noValidate autoComplete=\"disable\">\r\n            <div className={classes.row}>\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"From\"\r\n                type=\"text\"\r\n                InputProps={{\r\n                  readOnly: true,                  \r\n                }}\r\n                style={{ marginRight: 8 }}\r\n                value={ account.accountName }\r\n                helperText={'(' + account.accountNumber + ')'}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"availableBalance\"\r\n                name=\"availableBalance\"\r\n                label=\"Available Balance\"\r\n                type=\"text\"\r\n                inputProps={{\r\n                  readOnly: true,\r\n                  \"data-testid\": \"amount\", name: \"amount\"\r\n                }}\r\n                value={ formattedAmount}\r\n                helperText=\"Available Balance\"\r\n              />\r\n            </div>\r\n            <div className={classes.row}>\r\n              <FormControl required className={classes.textField} fullWidth\r\n                style={{ marginTop: 16 }}>\r\n                <InputLabel>To</InputLabel>\r\n                <Select value={toAccountId} onChange={handleToAccountChange} \r\n                  displayEmpty className={classes.selectEmpty} autoFocus\r\n                  inputProps={{ \"data-testid\": \"toAccountId\", name: \"toAccountId\" }}\r\n                  name=\"toAccountId\" id=\"toAccountId\">\r\n                  {accountOptions}                  \r\n                </Select>\r\n                <FormHelperText>Account To Transfer</FormHelperText>\r\n              </FormControl>\r\n              \r\n            </div>\r\n            <div className={classes.row}>\r\n              <TextField required\r\n                  className={[classes.textField, classes.rowWidth50].join(' ')}\r\n                  autoFocus\r\n                  margin=\"normal\"\r\n                  style={{ marginRight: 8 }}\r\n                  id=\"transferAmount\"\r\n                  name=\"transferAmount\"\r\n                  label=\"Amount To Transfer\"\r\n                  type=\"number\"\r\n                  defaultValue=\"0.00\"\r\n                  helperText={amountError ?\r\n                    amountError : (amount * rate).toLocaleString() + ' ' + toCcy.toUpperCase()}\r\n                  error={amountError!==null}\r\n                  onChange={handleAmountChange}\r\n                  inputProps={{ \"data-testid\": \"transferAmount\", name: \"transferAmount\" }}\r\n                />\r\n                <TextField disabled={toCcy === account.ccy || toCcy === ''}\r\n                  className={[classes.textField, classes.rowWidth50].join(' ')}\r\n                  autoFocus\r\n                  margin=\"normal\"\r\n                  id=\"rate\"\r\n                  name=\"rate\"\r\n                  label=\"Exchange Rate\"\r\n                  type=\"number\"\r\n                  defaultValue=\"1.00\"\r\n                  helperText={rateError ? rateError : 'Exchange Rate'}\r\n                  onChange={handleRateChange}\r\n                  inputProps={{ \"data-testid\": \"rate\", name: \"rate\"  }}\r\n                  error={rateError!==null}\r\n                />\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus type=\"button\" onClick={props.onClose} color=\"primary\" \r\n            data-testid=\"cancel\" id=\"cancel\">\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleSubmit}\r\n            type=\"submit\" disabled={disable} className=\"btn-transfer\" id=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default connect(null, null)(transferDialog)\r\n","import axios from 'axios';\n\nimport { SET_ACCOUNTS, SET_TRANSACTIONS, SET_TRANSFER } from './types';\n\nexport function fetchAccounts() {\n  return (dispatch) => {\n    return axios.get('http://localhost:5000/api/accounts')\n      .then(res => dispatch({\n        type: SET_ACCOUNTS,\n        payload: res.data.accounts\n      }))\n      .catch(err => {\n        console.log('[Fetch Accounts Error]\\n', err);\n      });\n  };\n}\n\nexport function fetchTransactions(accountId) {\n  return (dispatch) => {\n    return axios.get('http://localhost:5000/api/transactions/' + accountId)\n      .then(async (res) => dispatch({\n        type: SET_TRANSACTIONS,\n        payload: res.data.transactions\n      }))\n      .catch(err => {\n        console.log('[Fetch Transactions Error]\\n', err);\n      });\n  };\n}\n\nexport function addTransfer(transfer) {\n  return (dispatch) => {\n    return axios.post('http://localhost:5000/api/transfer', transfer)\n      .then(async (res) => {\n        dispatch({\n          type: SET_TRANSFER,\n          payload: res.data.transaction\n        });\n        dispatch({\n          type: SET_ACCOUNTS,\n          payload: res.data.accounts\n        });\n      })\n      .catch(err => {\n        console.log('[Add Transfer Error]\\n', err);\n      });\n  };\n}\n","export function format(num, fix) {\n  var p = num.toFixed(fix).split(\".\");\n  return p[0].split(\"\").reduceRight(function(acc, num, i, orig) {\n      if (\"-\" === num && 0 === i) {\n          return num + acc;\n      }\n      var pos = orig.length - i - 1\n      return  num + (pos && !(pos % 3) ? \",\" : \"\") + acc;\n  }, \"\") + (p[1] ? \".\" + p[1] : \"\");\n}","/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { format } from './../../helper/formats';\n\nimport * as actions from '../../store/actions';\n\nconst columns = [\n  { id: 'createdAt', label: 'Date', minWidth: 150 },\n  { id: 'description', label: 'Description', minWidth: 200 },\n  {\n    id: 'amount',\n    label: 'Amount',\n    minWidth: 150,\n    align: 'right',\n    format: value => format(+value, 2),\n  },\n  { id: 'ccy', label: 'Currency', minWidth: 50 },\n  { id: 'action', label: 'Action', minWidth: 70 },\n];\n\nfunction createData(item) {      \n  return {\n          createdAt: item.createdAt, \n          description: item.description, \n          amount: item.amount, \n          ccy: item.ccy, \n          action: item.action\n        };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  tableWrapper: {\n    maxHeight: 440,\n    overflow: 'auto',\n  },\n  subtitle: {\n    margin: '1rem 0'\n  },\n  detail: {\n    margin: '1rem'\n  }\n});\n\nconst transactions = React.memo((props) => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [rows, setRows] = useState(null);\n\n  useEffect(() => {\n    if (props.accountId) {\n      props.onTransactionsFetch(props.accountId);\n    }\n  }, [props.accountId]);\n\n  useEffect(() => {\n    if (props.transactions && props.transactions.length > 0) {\n      const transactionRows = props.transactions.map(item => {\n        return createData(item);\n      });\n      setRows(transactionRows);\n    }\n  }, [props.transactions]);\n\n  const handleChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n\n  const handleChangeRowsPerPage = useCallback(event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }, []);\n      \n  return (\n    <div className={classes.detail}>\n    { rows ? \n      <div>\n        <Typography variant=\"h5\" className={classes.subtitle}>\n          Transactions Detail</Typography>     \n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={i}>\n                      {columns.map(column => {\n                        const value = row[column.id];                                                                \n                        return (\n                          <TableCell key={column.id} align={column.align} style={{ textTransform: 'uppercase'}}>\n                            {column.format && typeof +value === 'number' ? column.format(value) : value}\n                          </TableCell>\n                        );                    \n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              'aria-label': 'previous page',\n            }}\n            nextIconButtonProps={{\n              'aria-label': 'next page',\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n      : null }\n    </div>\n  );\n});\n\nconst mapStateToProps = state => (\n  {\n    transactions: state.transaction ? state.transaction.transactions : null\n  }\n);\n\nconst mapDispatchToProps = dispatch => {    \n  return {\n    onTransactionsFetch: (accountId) => dispatch(actions.fetchTransactions(accountId))\n  }  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(transactions);\n","import { useLayoutEffect, useEffect } from 'react';\r\n\r\n// React currently throws a warning when using useLayoutEffect on the server.\r\n// To get around it, we can conditionally useEffect on the server (no-op) and\r\n// useLayoutEffect in the browser.\r\nconst canUseDOM = !!(\r\n  typeof window !== 'undefined' &&\r\n  typeof window.document !== 'undefined' &&\r\n  typeof window.document.createElement !== 'undefined'\r\n);\r\n\r\nconst useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\r\n\r\nexport default useIsomorphicLayoutEffect;","/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\nimport Fab from '@material-ui/core/Fab';\nimport Typography from '@material-ui/core/Typography';\nimport TransferDialog from './TransferDialog/TransferDialog';\nimport { connect } from 'react-redux';\nimport { format } from './../../helper/formats';\n\nimport Transactions from '../Transactions/Transactions';\nimport * as actions from '../../store/actions';\n\nimport useIsomorphicLayoutEffect from './../../use-isomorphic-layout-effect';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  fabButton: {\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    margin: '2rem 2rem 2rem 0',\n  },\n  row: {\n    display: 'flex'\n  },\n  rowWidth50: {\n    flex: '1 1 49%'\n  },\n  accountNotSelected: {\n    marginLeft: '0.5rem'\n  }\n}));\n\nconst account = (props) => {\n  const classes = useStyles();\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState('')\n  const [accounts, setAccounts] = useState([]);\n  const [account, setAccount] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  useIsomorphicLayoutEffect(() => {\n    props.onAccountsFetch();    \n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (props.accounts && props.accounts.length >0) {\n      setAccounts(props.accounts);\n    }\n  }, [props.accounts]);\n\n  const accountOptions = useMemo(() => {\n    return accounts.map((item, i) => {\n      return <MenuItem key={i} value={item.id}>{item.accountName}<small>&nbsp;({item.accountNumber})</small></MenuItem>\n    });    \n  }, [accounts]);\n\n  const handleChange = (event) => {\n    setAccountId(event.target.value);\n    const account = accounts.find(item => item.id === event.target.value);\n    if (account) {\n      setAccount(account);\n      setAmount(`${format(+account.amount, 2)} ${account.ccy.toUpperCase()}`);           \n    }\n  };\n\n  const handleTransferOpen = () => {\n    setOpen(true);\n  };\n\n  const handleTransferClosed = () => {\n    setOpen(false);\n  }; \n   \n  return (    \n    <div className=\"container\">      \n      <div className={ classes.row}>\n        <FormControl className={[classes.formControl, classes.rowWidth50].join(' ')}>\n          <Select id=\"accountSelect\" name=\"accountSelect\" value={accountId} onChange={handleChange} \n            displayEmpty className={classes.selectEmpty} aria-labelledby=\"account\"\n            inputProps= {{ \"data-testid\": \"accountSelect\"}}>\n            <MenuItem value={\"\"} disabled>\n              Account\n            </MenuItem>\n            {accountOptions}\n          </Select>\n          <FormHelperText>Account</FormHelperText>\n        </FormControl>\n        <TextField\n            id=\"balance\"\n            className={[classes.textField, classes.rowWidth50].join(' ')}\n            style={{ marginTop: 24, marginRight: 8 }}           \n            margin=\"normal\"\n            InputProps={{\n              readOnly: true,\n              id: 'balance'\n            }}\n            value={amount}\n            placeholder=\"Available Balance\"\n            helperText=\"Available Balance\"\n          />\n        </div>\n        { accountId === '' ? \n          <Typography variant=\"body1\" className={classes.accountNotSelected} id=\"accountNotSelected\">\n            Account not selected\n          </Typography>\n          :\n          <div>            \n            <Transactions accountId={accountId} />\n            <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.fabButton} \n              onClick={handleTransferOpen} disabled={accountId === ''}>\n              <SyncAltIcon />\n            </Fab>\n            <TransferDialog selectedAccount={account} open={open} accounts={accounts}\n              onClose={handleTransferClosed} />\n          </div>\n        }\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {  \n  return {\n    accounts: state.account ? state.account.accounts : null\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {  \n  return {\n    onAccountsFetch: () => dispatch(actions.fetchAccounts())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(account);","import React from 'react';\nimport {  Route, Switch, Redirect }  from 'react-router-dom';\n\nimport Header from './Header/Header';\nimport Account from '../components/Account/Account';\n\nconst app = props => { \n  let routes = (\n    <Switch>\n      <Route exact path=\"/\" component={ Account } />      \n      <Redirect to=\"/\" />\n    </Switch>\n  );\n  return (\n    <React.Fragment>\n      <Header />\n      <main>\n        {routes}      \n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default app;","import * as actionTypes from './../actions/types';\n\nconst initialState = {\n  accounts: null,\n};\n\nconst accountReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case actionTypes.SET_ACCOUNTS:\n      return {\n        ...state,\n        accounts: [...action.payload]\n      };\n    default:\n      return state;\n  }\n\n}\nexport default accountReducer;","import * as actionTypes from './../actions/types';\n\nconst initialState = {\n  transactions: null,\n};\n\nconst transactionReducer = (state = initialState, action) => {\n  switch(action.type) {    \n    case actionTypes.SET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: [...action.payload]\n      };\n    case actionTypes.SET_TRANSFER:      \n      const addTransactions = [...state.transactions];\n      addTransactions.unshift(action.payload);\n      return {\n        ...state,\n        transactions: addTransactions\n      };\n    default:\n      return state;\n  }\n}\nexport default transactionReducer;","import { combineReducers } from 'redux';\nimport accountReducer from './accountReducer';\nimport transactionReducer from './transactionReducer';\n\nexport default combineReducers({  \n  account: accountReducer,\n  transaction: transactionReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { BrowserRouter }  from 'react-router-dom';\n\nimport App from './components/App';\nimport reducers from './store/reducers';\n\nimport './index.scss';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nconst MyAppWithStore = () => (\n  <Provider store={store}>\n    <BrowserRouter basename='/'>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<MyAppWithStore />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}